#!/bin/bash


# Bitnami Magento 2 web server doc root.
HTDOCS=/opt/bitnami/apps/magento/htdocs
GITREPO=/opt/bitnami/apps/magento/git


# Check environment variables are set up to connect to prodution server.
if [ "$MAGENTO_PROD_SSH_HOST" == "" -o "$MAGENTO_PROD_SSH_USER" == "" ]; then
    echo "This script uses the following environment variables."
    echo ""
    echo "  MAGENTO_PROD_SSH_USER - username to connect with on production host"
    echo "  MAGENTO_PROD_SSH_HOST - hostname or IP address of production host"
    echo "  MAGENTO_PROD_SSH_PORT (optional) - SSH port number to use if not 22"
    echo "  MAGENTO_PROD_SSH_IDENTITY (optional) - SSH identity file if not ~/.ssh/id_rsa"
    echo "  MAGENTO_PROD_SSH_EMAIL (optional) - Email address for ssh key generation"
    echo ""
    echo "You must set at least the first two variables before running this script."
    echo "For example:"
    echo ""
    echo "export MAGENTO_PROD_SSH_USER=xxx"
    echo "export MAGENTO_PROD_SSH_HOST=1.2.3.4"
    exit 1
fi

# Generate a key if we don't have one already.
if [ ! -f $HOME/.ssh/id_rsa.pub ]; then
    echo "==== No existing SSH key found, generating new key."
    if [ "$MAGENTO_PROD_SSH_EMAIL" == "" ]; then
	echo -n "Enter your email address: "
	read MAGENTO_PROD_SSH_EMAIL
    fi
    ssh-keygen -t rsa -C "$MAGENTO_PROD_SSH_EMAIL" -N "" -f $HOME/.ssh/id_rsa
    echo "Copying public key to production server."
    echo ""
    echo "If prompted, enter ssh password for '$MAGENTO_PROD_SSH_USER' on production server."
    echo ""
    cat $HOME/.ssh/id_rsa.pub | ssh -oStrictHostKeyChecking=no -i $HOME/.ssh/id_rsa "${MAGENTO_PROD_SSH_USER}@${MAGENTO_PROD_SSH_HOST}" "mkdir -p ~/.ssh; cat >>~/.ssh/authorized_keys"
    if [ "$?" != "0" ]; then
	echo "Failed to copy to production host, discarding generated key."
	rm $HOME/.ssh/id_rsa $HOME/.ssh/id_rsa.pub
	exit 1
    fi
    echo "SSH copied to production. Continuing with installation."
    sleep 2
fi


. /usr/local/bin/m2-common.sh


# Set up the auth.json file if it does not exist.
# We need 'composer install' to download 'vendor' directory for various
# magento commands to work (like put store into maintenance mode).
runOnProd "
    if [ ! -f $HTDOCS/auth.json ]; then
	exit 1
    fi
"
if [ "$?" == "1" ]; then
    if [ "$MAGENTO_REPO_PUBLIC_KEY" == "" ]; then
	echo -n "Please enter your Magento repo public key: "
	read MAGENTO_REPO_PUBLIC_KEY
    fi
    if [ "$MAGENTO_REPO_PRIVATE_KEY" == "" ]; then
	echo -n "Please enter your Magento repo public key: "
	read MAGENTO_REPO_PRIVATE_KEY
    fi
    mkdir -p ~/.composer
    echo "{
    \"http-basic\": {
        \"repo.magento.com\": {
            \"username\": \"$MAGENTO_REPO_PUBLIC_KEY\",
            \"password\": \"$MAGENTO_REPO_PRIVATE_KEY\"
        }
    }
}
" | runOnProd "cat >$HTDOCS/auth.json"

    # Add 'bin' to PATH as well.
    runOnProd "
	if grep magento ~/.bashrc; then
	    echo Magento already in PATH
	else
	   echo export PATH=\${PATH}:$HTDOCS/bin >> ~/.bashrc
	   echo export umask 002 >> ~/.bashrc
	fi
    "
fi


# Install GIT if not already present.
runOnProd "
    if [ ! -f /usr/bin/git ]; then
	echo ==== Installing GIT.
	sudo apt-get update
	sudo apt-get install -y git
    fi
"

# Commit into GIT if not done so already.
runOnProd "
    if [ ! -d $HTDOCS/.git ]; then
        echo ==== Committing Magento code to GIT.
	sudo mkdir -p $GITREPO
	sudo chown bitnami:daemon $GITREPO
	cd $GITREPO
	git --bare init --shared magento.git

        cd $HTDOCS
	sudo usermod -a -G daemon bitnami
	sudo chmod -R g+w .
	sudo chmod -R g+s var pub
	# sed -i -e \"/^\\/\\*\\.\\*/d\" -e \"/^\\/bin/d\" .gitignore
	cat <<EOF > .gitignore
/.buildpath
/.cache
/.metadata
/.project
/.settings
atlassian*
/nbproject
/sitemap
/.idea
/.gitattributes
/app/config_sandbox
/app/etc/config.php
/app/etc/env.php
/app/code/Magento/TestModule*
/lib/internal/flex/uploader/.actionScriptProperties
/lib/internal/flex/uploader/.flexProperties
/lib/internal/flex/uploader/.project
/lib/internal/flex/uploader/.settings
/lib/internal/flex/varien/.actionScriptProperties
/lib/internal/flex/varien/.flexLibProperties
/lib/internal/flex/varien/.project
/lib/internal/flex/varien/.settings
/node_modules
/.grunt

/pub/media/*.*
!/pub/media/.htaccess
/pub/media/catalog/*
!/pub/media/catalog/.htaccess
/pub/media/customer/*
!/pub/media/customer/.htaccess
/pub/media/downloadable/*
!/pub/media/downloadable/.htaccess
/pub/media/import/*
!/pub/media/import/.htaccess
/pub/media/theme/*
/pub/media/theme_customization/*
!/pub/media/theme_customization/.htaccess
/pub/media/wysiwyg/*
!/pub/media/wysiwyg/.htaccess
/pub/media/tmp/*
!/pub/media/tmp/.htaccess
/pub/media/captcha/*
/pub/static/*
!/pub/static/.htaccess

/var/*
!/var/.htaccess
/vendor
!/vendor/.htaccess
EOF
	git init
	git config user.email $USER@example.com
	git config user.name $USER
	git config push.default simple
	git add -A
	git commit -m \"Initial commit\"
	git remote add upstream $GITREPO/magento.git
	git push upstream master
    fi
"

# Check out the code locally.
if [ -d /magento2 -a ! -d /magento2/.git ]; then
    echo ==== Checking out files locally.
    git clone "ssh://${MAGENTO_PROD_SSH_USER}@${MAGENTO_PROD_SSH_HOST}$GITREPO/magento.git" .
    git config user.email $USER@example.com
    git config user.name $USER
    git config push.default simple
fi

